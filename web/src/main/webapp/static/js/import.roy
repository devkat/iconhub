type Content = { uri: String }
type Request = { url: String, content: Content }

define ['./factory', 'dojo/_base/xhr', 'dojo/on', 'dojo/dom', 'dojo/dom-construct', "dojo/_base/array", "dojox/form/RangeSlider"] (\Factory xhr on dom domConstruct array RangeSlider ->

  let ajaxRequest = {
    return: \x -> x
    bind: \(x : Request) f ->
      xhr.get { url: x.url, content: x.content, handleAs: "json", load: f }
  }
  
  let absMin = 1
  let absMax = 128
  let min = 16
  let max = 32

  let parse uri = (do ajaxRequest
    images <- { url: "/api/imagescraper", content: { uri: uri } }
    let container = dom.byId "images"
    let nodes = array.map images (\image ->
      let img = domConstruct.create "img" { src: image.url }
      let imgContainer = domConstruct.create "div" { className: "image-wrapper" }
      imgContainer.appendChild img
      let block = domConstruct.create "div" { className: "span4 image-block" }
      block.appendChild imgContainer
      if image.title != undefined then
        (block.appendChild (domConstruct.create "span" { innerHTML: image.title, className: "image-title" }))
      else
        ""
      block
    )
    array.forEach nodes (\node -> container.appendChild node)
    let args = {
      value: [min, max]
      minimum: absMin
      maximum: absMax
      style: "width: 300px"
    }
    Factory.create dojox.form.HorizontalRangeSlider [args, "slider"]
  )

  on (dom.byId "uri") "change" (\evt ->
    let uri = evt.target.value
    if uri == "" then null else (parse uri)
  )

)
